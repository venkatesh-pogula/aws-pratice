---
AWSTemplateFormatVersion: "2010-09-09"
Description: exploring the cloudformation
Parameters:
  vpccidr:
    Description: this is for vpc cidr 
    Type: String 
    Default: 10.10.0.0/16
  web1az:
    Description: Az of web1 subnet 
    Type: AWS::EC2::AvailabilityZone::Name
  web2az:
    Description: Az of web2 subnet 
    Type: AWS::EC2::AvailabilityZone::Name
  app1az:
    Description: Az of app1 subnet 
    Type: AWS::EC2::AvailabilityZone::Name
  app2az:
    Description: Az of app2 subnet 
    Type: AWS::EC2::AvailabilityZone::Name
  db1az:
    Description: Az of db1 subnet 
    Type: AWS::EC2::AvailabilityZone::Name
  db2az:
    Description: Az of db2 subnet 
    Type: AWS::EC2::AvailabilityZone::Name          

Resources: 
  ntiervpc: 
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: vpccidr  
      Tags:
        - Key: Name
          Value: ntier
  web1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: web1az
      VpcId:
        Ref: ntiervpc
      CidrBlock:
        Fn::Select: 
          - 0
          - Fn::Cidr: 
            Ref: vpccidr
          - 6
          - 8
      Tags:
       - Key: Name
         Value: web-1
  
  web2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: web2az
      VpcId:
        Ref: ntiervpc
      CidrBlock:
        CidrBlock:
        Fn::Select: 
          - 1
          - Fn::Cidr: 
            Ref: vpccidr
          - 6
          - 8
      Tags:
       - Key: Name
         Value: web-2   

  app1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 
        Ref: app1az
      VpcId:
        Ref: ntiervpc
      CidrBlock:
        CidrBlock:
        Fn::Select: 
          - 2
          - Fn::Cidr: 
            Ref: vpccidr
          - 6
          - 8
      Tags:
       - Key: Name
         Value: app-1                      
  
  app2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: app2az
      VpcId:
        Ref: ntiervpc
      CidrBlock:
        CidrBlock:
        Fn::Select: 
          - 3
          - Fn::Cidr: 
            Ref: vpccidr
          - 6
          - 8
      Tags:
       - Key: Name
         Value: app-2    
  db1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: db1az
      VpcId:
        Ref: ntiervpc
      CidrBlock:
        CidrBlock:
        Fn::Select: 
          - 4
          - Fn::Cidr: 
            Ref: vpccidr
          - 6
          - 8  
      Tags:
       - Key: Name
         Value: db-1 
  db2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Ref: db2az
      VpcId:
        Ref: ntiervpc
      CidrBlock:
        CidrBlock:
        Fn::Select: 
          - 5
          - Fn::Cidr: 
            Ref: vpccidr
          - 6
          - 8
      Tags:
       - Key: Name
         Value: db-2                     
  webnacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
       VpcId:
         Ref: ntiervpc
       Tags:
        - Key: Name
          Value: webnacl 
  webnaclinboundrule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       CidrBlock: 192.168.0.0/16
       RuleNumber: 100
       NetworkAclId:
         Ref: webnacl
       Protocol: -1
       RuleAction: allow
  webnacloutboundrule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       CidrBlock: 0.0.0.0/0
       RuleNumber: 100
       NetworkAclId:
         Ref: webnacl
       Protocol: -1
       RuleAction: allow 
       Egress: true 
  webnaclinboubdruleforhttp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       CidrBlock: 0.0.0.0/0
       PortRange:
         From: 80
         To: 80
       RuleNumber: 102
       NetworkAclId:
         Ref: webnacl
       Protocol: 6
       RuleAction: allow 
  web1naclassiocation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: webnacl
      SubnetId:
        Ref: web1
  web2naclassiocation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: webnacl
      SubnetId:
        Ref: web2
## first create the web nacl and assign the vpc to webnacl then below steps follows
## In the above step we complete the web nacl creation,in/out bound assign and subnet associations for web subnets
## Now lets create the app and web nacls and attached the vpc,create the in/out bound rules creations and associates the subnets
  appnacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
       VpcId:
         Ref: ntiervpc
       Tags:
        - Key: Name
          Value: appnacl
 ## attaching the appnacl to vpc 
  appnaclinboundrule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       CidrBlock: 192.168.0.0/16
       RuleNumber: 100
       NetworkAclId:
         Ref: appnacl
       Protocol: -1
       RuleAction: allow   
 ## creating the in/out bound rule for appnacl      
  appnacloutboundrule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       CidrBlock: 0.0.0.0/0
       RuleNumber: 100
       NetworkAclId:
         Ref: appnacl
       Protocol: -1
       RuleAction: allow 
       Egress: true 
 ## now assoicate the subnets....to nacl
  app1naclassiocation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: appnacl
      SubnetId:
        Ref: app1 
  app2naclassiocation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: appnacl
      SubnetId:
        Ref: app2 
 ## now create the dbnacl
  dbnacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
       VpcId:
         Ref: ntiervpc
       Tags:
        - Key: Name
          Value: appnacl
 ## attaching the vpc to db nacl and in/bound rule creations also
  dbnaclinboundrule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       CidrBlock: 192.168.0.0/16
       RuleNumber: 100
       NetworkAclId:
         Ref: dbnacl
       Protocol: -1
       RuleAction: allow 
  dbnacloutboundrule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       CidrBlock: 0.0.0.0/0
       RuleNumber: 100
       NetworkAclId:
         Ref: dbnacl
       Protocol: -1
       RuleAction: allow 
       Egress: true     
 ## Now subnets assoications
  db1naclassiocation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: dbnacl
      SubnetId:
        Ref: db1 
  db2naclassiocation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId:
        Ref: dbnacl
      SubnetId:
        Ref: db2 
 ## create the security group as open ssh and http ports
  SecurityGroupName:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: cloudformation
      GroupDescription: this is for cloudformation sg
      VpcId:
        Ref: ntiervpc 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp 
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name 
          Value: Securitygroupforsshandhttp  
## To create the open 8080 port and 3306 port for app and db
Openmysqlport:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: cloudformation
      GroupDescription: this to open 3306 sg
      VpcId:
        Ref: ntiervpc 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp:
            Ref: vpccidr
      Tags:
        - Key: Name 
          Value: Mysql          
## To create the db-subnet by using RDS
DBSubnetGroup:
  Type: AWS::RDS::DBSubnetGroup
  Properties:
    DBSubnetGroupDescription: this for the db subnets group 
    SubnetIds:
      - subnet-id:
        Ref: db1
      - subnet-id:
        Ref: db2   
  Tags:
    - Key: Name 
      Value: dbsecuritygroup          
## Creation of mysql database 
  mysqldbinstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t2.micro
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 0
      DBInstanceIdentifier: ltmysqlfromcf
      DBName: cloudformationinstance        
      DBSubnetGroupName:
        Ref: DBSubnetGroup  
      Engine: mysql
      EngineVersion: 8.0.25 
      MasterUsername: devopscf
      MasterUserPassword: devopscfdevopscf
      MultiAZ: false 
      Port: 3306
      PubliclyAccessible: false
      StorageEncrypted: false
      StorageType: gp2
      VPCSecurityGroups:
        - vpc-sg-id: 
           Ref: Openmysqlport
      Tags:
        - Key: Name
          Value: mysqldbinstance         
            
                           
   
       




         

         